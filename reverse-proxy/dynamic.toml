# http routing section
[http]
  [http.routers]
    # Define a connection between requests and services
    [http.routers.backend]
      rule = "Host(`{{ env `DOMAIN_NAME` }}`) && PathPrefix(`/api`)"
      # If the rule matches, applies the middleware
      middlewares = ["cors", "strip-prefix"]
      # If the rule matches, forward to the whoami service (declared below)
      service = "backend"
      # Define the entrypoints to listen to
      entryPoints = ["websecure"]
      # Define the tls configuration to use
      [http.routers.backend.tls]

[http.middlewares]
  # Define the cors middleware
  [http.middlewares.cors.headers]
    accesscontrolallowmethods = "GET,OPTIONS,PUT,POST,PATCH,DELETE"
  # Define the strip prefix middleware
  [http.middlewares.strip-prefix.stripprefix]
    prefixes = ["/api"]

[http.services]
  # Define how to reach an existing service on our infrastructure
  [http.services.backend.loadBalancer]
    [[http.services.backend.loadBalancer.servers]]
      url = "http://backend:5000"

[tls]
  # Define the certificates to use for the websecure entrypoint
  [[tls.certificates]]
    certFile = "/etc/ssl/certs/localhost.crt"
    keyFile  = "/etc/ssl/certs/localhost.key"
  # Define the stores to use for the tls configuration
  [tls.stores]
    [tls.stores.default]
      [tls.stores.default.defaultCertificate]
        certFile = "/etc/ssl/certs/localhost.crt"
        keyFile  = "/etc/ssl/certs/localhost.key"
